name: Deploy to GitHub Pages

on:
  # Se ejecuta en pushes a la rama main
  push:
    branches: [ "main" ]
  
  # Permite ejecutar este workflow manualmente desde la pestaña Actions
  workflow_dispatch:

# Establece permisos del GITHUB_TOKEN para permitir deployment a GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Permite solo un deployment concurrente, omitiendo las ejecuciones en cola entre la ejecución en progreso y la última en cola.
# Sin embargo, NO cancela las ejecuciones en progreso ya que queremos permitir que estos deployments de producción se completen.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci || npm install
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Build site
        run: |
          # Como es un sitio estático, solo copiamos los archivos
          mkdir -p _site
          cp -r * _site/ || true
          # Removemos directorios innecesarios del build
          rm -rf _site/.github _site/node_modules _site/.git 2>/dev/null || true
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  # Job de deployment
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
